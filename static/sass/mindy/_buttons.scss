@import "compass/css3";

$buttonGroupMarginLeft: 15px;

$buttonBorderRadius: 2px !default;

@mixin button-generate-colors($background-color, $text-color, $inverse: false) {
  @if $inverse == true {
    @include text-shadow(saturate(shade($background-color, 20%), 5%) 0 1px 0);
  } @else {
    @include text-shadow(desaturate(tint($background-color, 25%), 5%) 0 1px 0);
  }

  @include transition();
  @include transition-duration(0.5s);

  $button-dark-color: shade($background-color, 15%);
  $button-border-color: shade($background-color, 10%);
  $button-dark-border-color: shade($background-color, 16%);
  $button-light-border-color: lighten($background-color, 8%);
  $button-light-color: saturate(tint($background-color, 15%), 15%);

  background-color: $background-color;
  border-color: $button-border-color;
  border-bottom-color: $button-dark-border-color;
  color: $text-color;

  @include gradient($button-light-color, $background-color);

  $button-highlight-color: transparentize(desaturate(tint(desaturate(tint($background-color, 60%), 5%), 15%), 5%), 0%);
  $button-shadow-color: saturate(shade($background-color, 2%), 5%);
  $dark-background-color: shade(#fff, 15%);
  @include box-shadow(desaturate(tint($button-light-color, 10%), 5%) 0 2px 1px 0 inset);

  @include button-back($background-color, $button-border-color);
  @include button-next($background-color, $button-border-color);
  @include button-statuses($background-color, $button-border-color);
}

// button
@mixin button($background-color, $text-color, $button: true, $inverse: false) {
  @include button-fixes;
  @include button-additional-classes;

  @include border-radius($buttonBorderRadius);
  @include inline-block;

  border: 1px solid #000;
  padding: 4px 14px 4px 14px;
  position: relative;
  cursor: pointer;

  //@if $button == true {
  line-height: 18px;
  //} @else {
  //  line-height: 17px;
  //}

  @include button-generate-colors($background-color, $text-color, $inverse);
}

.button-container {
  &.open {
    *z-index: 1000;

    .dropdown-menu {
      display: block;
      margin-top: 1px;
    }

    .dropdown-toggle {
      background-image: none;
      @include single-box-shadow(0, 1px, 6px, rgba(0, 0, 0, 0.15), inset);
    }
  }

  .button, .button-group {
    vertical-align: top;
  }
}

.button + .button,
.button + .button-group,
.button-group + .button,
.button-group + .button-group {
  margin-left: $buttonGroupMarginLeft;
}

@mixin button-group() {
  position: relative;
  display: inline-block;
  list-style: none;
  padding: 0;
  margin: 0;

  zoom: 1;
  *display: inline;

  .button {
    position: relative;
    float: left;
    margin-left: -1px;
  }

  .button + .button {
    @include border-radius(0);

    &:first-child, &.dropdown-toggle {
      @include border-radius($buttonBorderRadius 0 0 $buttonBorderRadius);
    }

    &:last-child, &.dropdown-toggle {
      @include border-radius(0 $buttonBorderRadius $buttonBorderRadius 0);
    }
  }
}

.button-group {
  @include button-group;
}

.dropdown {
  position: relative;
}
.dropdown-toggle {
  *margin-bottom: -3px;
}
.dropdown-toggle:active, .open .dropdown-toggle {
  outline: 0;
}
.caret {
  display: inline-block;
  width: 0;
  height: 0;
  text-indent: -99999px;
  *text-indent: 0;
  vertical-align: top;
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 4px solid black;
  opacity: 0.5;
  filter: alpha(opacity=50);
  content: "\2193";
}
.dropdown .caret {
  margin-top: 8px;
  margin-left: 2px;
}
.dropdown:hover .caret, .open.dropdown .caret {
  opacity: 1;
  filter: alpha(opacity=100);
}
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  float: left;
  display: none;
  min-width: 245px;
  max-width: 245px;
  padding: 0;
  margin: 2px 0 0 0;
  list-style: none;
  background-color: #fff;
  border: 1px solid rgba(0, 0, 0, 0.2);
  @include box-shadow(0 2px 4px rgba(0, 0, 0, 0.2));

  &.bottom {
    top: auto;
    bottom: 100%;
    margin-bottom: 2px;
  }

  &.right {
    right: 0;
    top: 100%;
    left: auto;
  }

  &.left {

  }

  .divider {
    border-top: 1px solid #ebebeb;
    margin-top: 9px;
    margin-bottom: 10px;
    padding: 0;
    cursor: default;
  /*    height: 1px;
margin: 5px 1px;
overflow: hidden;
background-color: #e5e5e5;
border-bottom: 1px solid white;

// IE7 needs a set width since we gave a height. Restricting just
// to IE7 to keep the 1px left/right space in other browsers.
// It is unclear where IE is getting the extra space that we need
// to negative-margin away, but so it goes.
*width: 100%;
*margin: -5px 0 5px;*/

  }
}

.dropdown-menu a {
  position: relative;
  padding: 6px 0 6px 30px;
  color: #333;
  text-decoration: none;
  display: block;
  clear: both;
  font-weight: normal;
  line-height: 18px;
  white-space: nowrap;

  [class^="icon-"] {
    position: absolute;
    left: 7px;
    top: 6px;
  }
}

.dropdown-menu li > a:hover, .dropdown-menu .active > a, .dropdown-menu .active > a:hover {
  text-decoration: none;
  background-color: #eee;
}

.dropdown {
  &.open {
    *z-index: 1000;

    .dropdown-toggle {
      //@TODO: ruby pre && compass pre required !optional refactor me
      //@extend .button.checked;

      //color: #08c;
      //background: #ccc;
      //background: rgba(0, 0, 0, 0.3);
    }

    .dropdown-menu {
      display: block;
    }
  }
}

.button-container .button, .button-container .button-group {
  vertical-align: top;
}
.button-group{
  .open {
    *z-index: 1000;

    .dropdown-menu {
      display: block;
      margin-top: 1px;
    }

    .dropdown-toggle {
      background-image: none;
      @include box-shadow(0 1px 6px rgba(0, 0, 0, 0.15) inset);
      //-webkit-box-shadow: inset 0 1px 6px rgba(0, 0, 0, 0.15);
      //-moz-box-shadow: inset 0 1px 6px rgba(0, 0, 0, 0.15);
      //box-shadow: inset 0 1px 6px rgba(0, 0, 0, 0.15);
    }
  }
}

@mixin button-disabled {
  //&[disabled], &.disabled {
  color: #B8B8B8;
  border: 1px solid rgba(0, 0, 0, 0.05);
  background-color: #fff;
  cursor: default;

  &:hover, &:active {
    color: #b8b8b8;
    text-shadow: none;
    background-color: #fff;
    border: 1px solid rgba(0, 0, 0, 0.05);
    @include single-box-shadow(none);
  }
  //}
}

@mixin button-disabled2 {
  color: #b8b8b8;
  cursor: default;
  border: 1px solid #dcdcdc;

  &:hover {
    border: 1px solid #dcdcdc;
    @include single-box-shadow(none);
  }
}

@mixin button-additional-classes {
  &.pill {
    @include border-radius(20px);
  }

  &.sm {
    font-size: 11px;
  }

  //@include button-disabled;
  //@include button-disabled2;

  & [class^="icon-"], & [class*=" icon-"] {
    height: 18px;
  }

  @include button-small;

  &.dropdown-toggle {
    min-width: 5px;
    //height: 12px;
    //padding: 8px;
  }

  .caret {
    margin-left: 0;
    margin-top: 6px;
  }

  &:hover .caret {
    opacity: 1;
  }

  .no-text {
    min-width: 14px;
  }

  .xs-no-text {
    height: 9px;
    width: 18px;
    font-size: 10px;
    font-weight: bold;
    line-height: 10px;
    padding: 4px 2px;
    min-width: 5px;
  }
}

@mixin button-small {
  &.small, &.mini {
    height: 14px;
    font-size: 11px;
    font-weight: bold;
    line-height: 13px;
    padding: 4px 10px;

    & [class^="icon-"], & [class*=" icon-"] {
      height: 14px;
    }
  }
}

@mixin button-fixes {
  text-align: center;
  text-decoration: none;
  outline: 0;
  overflow: visible;
  margin: 0;
  vertical-align: top;
  *padding-top: 2px;
  *padding-bottom: 0;

  font-family: inherit;
  font-size: inherit;

  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }

  &:hover {
    text-decoration: none;
  }
}

@mixin button-next($background-color, $border-color) {
  &.next {
    border-right: none;
    @include button-statuses($background-color, $border-color);
    @include border-radius($buttonBorderRadius 4px 4px $buttonBorderRadius);

    &:before, &:after {
      border-right: 1px solid $border-color;
      right: -4px;

      content: '';
      position: absolute;
      width: 15px;
    }

    &:before {
      height: 50%;
      top: 1px;
      right: -5px;

      @include transform(skew(35deg, 0));
      $background-first-color: desaturate(tint($background-color, 28%), 5%);
      $background-last-color: desaturate(tint($background-color, 20%), 5%);
      @include background-image(linear-gradient(color-stops($background-first-color, $background-last-color)));
    }

    &:after {
      height: 48%;
      right: -5px;
      bottom: 1px;

      @include transform(skew(-35deg, 0));
      @include box-shadow(2px 1px 2px rgba(100,100,100,0.1));
      $background-first-color: desaturate(tint($background-color, 20%), 5%);
      @include background-image(linear-gradient(color-stops($background-first-color, $background-color)));
    }

    @include button-statuses($background-color, $border-color);
  }
}

@mixin button-back($background-color, $border-color) {
  &.back {
    border-left: none;
    @include button-statuses($background-color, $border-color);
    @include border-radius(4px $buttonBorderRadius $buttonBorderRadius 4px);

    &:before, &:after {
      content: '';
      position: absolute;
      width: 15px;
      border-left: 1px solid $border-color;
      left: -4px;
    }

    &:before {
      height: 48%;
      bottom: 1px;
      left: -5px;

      @include transform(skew(35deg, 0));
      @include box-shadow(-2px 1px 2px rgba(100,100,100,0.1));

      $background-first-color: desaturate(tint($background-color, 20%), 5%);
      @include background-image(linear-gradient(color-stops($background-first-color, $background-color)));
    }

    &:after {
      height: 50%;
      left: -5px;
      top: 1px;

      @include transform(skew(-35deg, 0));
      $background-first-color: desaturate(tint($background-color, 28%), 5%);
      $background-last-color: desaturate(tint($background-color, 20%), 5%);
      @include background-image(linear-gradient(color-stops($background-first-color, $background-last-color)));
    }

    /*
    &:hover:before, &:hover:after {
      $dark-background-color: shade($background-color, 35%);
      $button-shadow-color: saturate(shade($background-color, 2%), 5%);
      $button-light-color: desaturate(tint($background-color, 12%), 5%);
      $button-highlight-color: transparentize(desaturate(tint($button-light-color, 15%), 5%), 0%);

      background: tint($background-color, 5%);

      @include background-image(linear-gradient(color-stops(lighten(tint($button-light-color, 3%), 1%), tint($background-color, 3%))));
    }

    &:active:before, &:active:after, &.active:before, &.active:after, &.checked:before, &.checked:after {
      $border-top-color: shade($background-color, 10%);
      $border-bottom-color: shade($background-color, 16%);

      background-color: $background-color;
      border-top-color: $border-top-color;
      border-bottom-color: $border-bottom-color;

      @include background-image(linear-gradient(color-stops(desaturate(tint($background-color, 12%), 5%), $background-color)));
      @include box-shadow(shade($background-color, 10%) 0 1px 8px 0 inset);
    }
    */
  }
}

@mixin button-statuses($background-color, $border-color) {
  &:hover {
    @include transition();
    @include transition-duration(0.2s);

    $dark-background-color: shade($background-color, 35%);
    $button-shadow-color: saturate(shade($background-color, 2%), 5%);
    $button-light-color: desaturate(tint($background-color, 12%), 5%);
    $button-highlight-color: transparentize(desaturate(tint($button-light-color, 15%), 5%), 0%);

    background: tint($background-color, 5%);

    @include background-image(linear-gradient(color-stops(lighten(tint($button-light-color, 3%), 1%), tint($background-color, 3%))));
    @include box-shadow(
        lighten($dark-background-color,15%) 0 1px 1px 0,
        tint($button-shadow-color, 1%) 0 -2px 2px 0 inset,
        tint($button-highlight-color, 3%) 0 2px 3px 0 inset
    );
  }

  &:active, &.active, &.checked {
    @include transition();
    @include transition-duration(0.5s);

    $border-top-color: shade($background-color, 10%);
    $border-bottom-color: shade($background-color, 16%);

    background-color: $background-color;
    border-top-color: $border-top-color;
    border-bottom-color: $border-bottom-color;

    @include background-image(linear-gradient(color-stops(desaturate(tint($background-color, 12%), 5%), $background-color)));
    @include box-shadow(shade($background-color, 10%) 0 1px 8px 0 inset);
  }

  // font-awesome fix
  [class^="icon-"] {
    height: 17px;
  }
}